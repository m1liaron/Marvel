{"version":3,"sources":["components/spinner/Spinner.js","components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","services/MarvelService.js","hooks/http.hook.js","resources/img/mjolnir.png","components/randomChar/RandomChar.js","components/charList/CharList.js","components/skeleton/Skeleton.js","components/charInfo/CharInfo.js","components/errorBoundary/ErrorBoundary.js","resources/img/vision.png","components/pages/MainPage.js","components/comicsList/ComicsList.js","resources/img/Avengers.png","resources/img/Avengers_logo.png","components/appBanner/AppBanner.js","components/pages/ComicsPage.js","components/errorMessage/Page404.gif","components/pages/404.js","components/pages/SingleComicPage.js","components/appHeader/AppHeader.js","components/app/App.js","index.js"],"names":["Spinner","_jsx","className","children","Ring","size","lineWeight","speed","color","ErrorMessage","style","direction","width","height","objectFit","margin","src","img","alt","useMarvelService","_useHttp","_useState","useState","_useState2","_slicedToArray","loading","setLoading","_useState3","_useState4","error","setError","request","useCallback","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","url","method","body","headers","response","data","_args","arguments","wrap","_context","prev","next","length","undefined","fetch","sent","ok","Error","concat","status","json","abrupt","t0","message","stop","_x","apply","clearError","useHttp","_apiBase","_apiKey","getAllCharacters","offset","res","results","map","_transformCharacter","getCharacter","_ref2","_callee2","id","_context2","getAllComics","_ref3","_callee3","_args3","_context3","_transformComics","getComic","_ref4","_callee4","_context4","_x2","char","trueCharDescription","description","split","splice","join","name","thumbnail","path","extension","homepage","urls","wiki","comics","items","_comics$textObjects$","title","pageCount","language","textObjects","price","prices","View","imgStyle","_jsxs","href","RandomChar","setChar","_useMarvelService","useEffect","updateChar","timerId","setInterval","clearInterval","onCharLoaded","Math","floor","random","then","errorMessage","spinner","content","onClick","mjolnir","CharList","props","charList","setCharList","newItemLoading","setNewItemLoading","_useState5","_useState6","setOffset","_useState7","_useState8","charEnded","setCharEnded","onRequest","initial","onCharListLoaded","newCharList","ended","_toConsumableArray","itemRefs","useRef","focusOnItem","current","forEach","ref","classList","remove","add","focus","item","i","el","onCharSelected","onKeyPres","e","key","renderItems","disabled","Skeleton","_Fragment","CharInfo","charId","skeleton","ErrorBoundary","_Component","_inherits","_super","_createSuper","_this","_classCallCheck","_len","args","Array","_key","call","state","_createClass","value","err","errorInfo","console","log","this","setState","Component","MainPage","selectedChar","decoration","ComicsList","comicsList","setComicsList","comicsEnded","setComicsEnded","onComicsListLoaded","newComicsList","ScrollUpButton","_useState9","_useState10","setIsVisible","window","addEventListener","handleScroll","removeEventListener","pageYOffset","scrollTo","top","behavior","btn","Link","to","addNewItems","scrollUpBtn","AppBanner","avengers","avengersLogo","ComicsPage","Page404","navigate","useNavigate","comic","SingleComicPage","comicId","useParams","setComic","updateComic","onComicLoaded","AppHeader","isComicsPage","useLocation","pathname","startsWith","NavLink","end","isActive","App","Router","basename","process","Routes","Route","element","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3db52135.chunk.js","sourcesContent":["import { Ring } from '@uiball/loaders'\r\nimport './Spinner.scss'\r\nconst Spinner = () => {\r\n    return (\r\n        <div className=\"spinner\">\r\n        <Ring \r\n        size={40}\r\n        lineWeight={5}\r\n        speed={2} \r\n        color=\"black\" \r\n        />\r\n        </div>\r\n        )\r\n}\r\n\r\nexport default Spinner;  ","export default __webpack_public_path__ + \"static/media/error.7725c6cd.gif\";","import img from './error.gif';\r\n\r\nconst ErrorMessage = () => {\r\n    return (\r\n        // <img src={process.env.PUBLIC_URL + '/error.gif'}/>\r\n        <img style={{direction:'block', width:'250px', \r\n        height:'250px',objectFit:'contain', margin:'0 auto'}} \r\n        src={img} alt=\"Error\"/>\r\n    )\r\n}\r\n\r\nexport default ErrorMessage;","import { useHttp } from \"../hooks/http.hook\";\r\n\r\n\r\nconst useMarvelService = () => {\r\n    const {loading, request, error, clearError} = useHttp();\r\n    \r\n    const _apiBase = 'https://gateway.marvel.com:443/v1/public/';\r\n    const _apiKey = '&apikey=ec3605c1d50d12ae1995f95b3750ae07';\r\n    const _baseOffset = 210;\r\n    // __Name - це прогромисти договорюються не змінювати тут нічого\r\n\r\n \r\n\r\n   const getAllCharacters =  async(offset = _baseOffset) => {\r\n        const res = await request(`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`);\r\n        return res.data.results.map(_transformCharacter);\r\n    }\r\n\r\n   const getCharacter = async (id) => {\r\n        const res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\r\n        return _transformCharacter(res.data.results[0]);\r\n    }\r\n\r\n    const getAllComics = async (offset = 0) => {\r\n\t\tconst res = await request(\r\n\t\t\t`${_apiBase}comics?orderBy=issueNumber&limit=8&offset=${offset}&${_apiKey}`\r\n\t\t);\r\n\t\treturn res.data.results.map(_transformComics);\r\n\t};\r\n\r\n\tconst getComic = async (id) => {\r\n\t\tconst res = await request(`${_apiBase}comics/${id}?${_apiKey}`);\r\n\t\treturn _transformComics(res.data.results[0]);\r\n\t};\r\n\r\n\r\n\r\n   const _transformCharacter = (char) => {\r\n        const trueCharDescription = char.description ? (char.description.length > 150 ? char.description.split('').splice(0, 100).join('') + \"...\" : char.description) : \"We don't have information about this character\";\r\n        return {\r\n            id:char.id,\r\n            name: char.name,\r\n            description: trueCharDescription,\r\n            thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension ,\r\n            homepage: char.urls[0].url,\r\n            wiki: char.urls[1].url,\r\n            comics: char.comics.items \r\n        }\r\n    }\r\n\r\n    const _transformComics = (comics) => {\r\n        return {\r\n            id:comics.id,\r\n            title: comics.title,\r\n            description: comics.description || \"There is no description\",\r\n            pageCount: comics.pageCount \r\n                    ? `${comics.pageCount} p.` \r\n                    : 'No information about the number of pages',\r\n            thumbnail: comics.thumbnail.path + '.' + comics.thumbnail.extension,\r\n            language: comics.textObjects[0]?.language || 'en-us',\r\n            price: comics.prices[0].price \r\n                    ? `${comics.prices[0].price}$` \r\n                    : 'not available',\r\n        };\r\n    }\r\n\r\n    return {\r\n        loading, \r\n        error, \r\n        getAllCharacters, \r\n        getCharacter, \r\n        clearError, \r\n        getAllComics,\r\n        getComic,\r\n        }\r\n} \r\n\r\nexport default useMarvelService;","import { useState,  useCallback } from 'react';\r\n\r\nexport const useHttp = () => {\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n\r\n   const request = useCallback(async (url, method = 'GET', body = null, headers = {'Content-Type': 'application/json'}) => {\r\n    \r\n        setLoading(true);\r\n        \r\n        try {\r\n            const response = await fetch(url, {method,body,headers});\r\n            \r\n            if(!response.ok){\r\n                throw new Error(`Could not fetch ${url}, status ${response.status}`);\r\n            }\r\n\r\n            const data = await response.json();\r\n\r\n            setLoading(false);\r\n            return data; \r\n        } catch(error) {\r\n            setError(error.message);\r\n            setLoading(false);\r\n            throw error;\r\n        }\r\n\r\n   }, []) \r\n\r\n   const clearError = useCallback(() => setError(null), []);\r\n\r\n   return {loading, request, error, clearError}\r\n}","export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","import { useState, useEffect} from 'react';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport useMarvelService from '../../services/MarvelService'\n\nimport './randomChar.scss';\nimport mjolnir from '../../resources/img/mjolnir.png';\n\nconst RandomChar = () => {\n\n    const [char, setChar] = useState(null); \n    const {loading, error, getCharacter, clearError} = useMarvelService(); \n\n   useEffect(() => {\n    updateChar();\n    const timerId = setInterval(updateChar, 60000);\n\n    return () => {\n        clearInterval(timerId)\n    }\n   },[])\n   \n    const onCharLoaded = (char) => {\n        setChar(char);\n    }\n\n   const updateChar = () => {\n        clearError();\n        const id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000);\n        getCharacter(id)\n            .then(onCharLoaded)\n    }\n\n        const errorMessage = error ? <ErrorMessage/> : null;\n        const spinner = loading ? <Spinner/> : null;\n        const content = !(loading || error || !char) ? <View char={char}/> : null;\n\n\n        return (\n            <div className=\"randomchar\">\n                {errorMessage}\n                {spinner}\n                {content}\n                <div className=\"randomchar__static\">\n                    <p className=\"randomchar__title\">\n                        Random character for today!<br/>\n                        Do you want to get to know him better?\n                    </p>\n                    <p className=\"randomchar__title\">\n                        Or choose another one\n                    </p>\n                    <button onClick={updateChar} className=\"button button__main\">\n                        <div className=\"inner\">try it</div>\n                    </button>\n                    <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\"/>\n                </div>\n            </div>\n        )\n\n}\n\nconst View = ({ char }) => {\n    const {name, description, thumbnail, homepage, wiki} = char;\n\n    let imgStyle = {'objectFit' : 'cover'};\n        if (char.thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n            imgStyle = {'objectFit' : 'unset'};\n        }\n\n    return (\n        <div className=\"randomchar__block\">\n        <img src={thumbnail} style={imgStyle} alt=\"Random character\" className=\"randomchar__img\"/>\n        <div className=\"randomchar__info\">\n            <p className=\"randomchar__name\">{name}</p>\n            <p className=\"randomchar__descr\">\n                {description}\n            </p>\n            <div className=\"randomchar__btns\">\n                <a href={homepage} className=\"button button__main\">\n                    <div className=\"inner\">homepage</div>\n                </a>\n                <a href={wiki} className=\"button button__secondary\">\n                    <div className=\"inner\">wiki</div>\n                </a>\n            </div>\n        </div>\n    </div>\n    )\n}\n\nexport default RandomChar;","import React,{ useState, useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\n\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport Spinner from '../spinner/Spinner';\nimport useMarvelService from '../../services/MarvelService';\nimport './charList.scss';\n\nconst CharList = (props) => {\n\n    const [charList, setCharList] = useState([]);\n    const [newItemLoading, setNewItemLoading] = useState(false);\n    const [offset, setOffset] = useState(210);\n    const [charEnded, setCharEnded] = useState(false);\n\n    const {loading, error, getAllCharacters} = useMarvelService(); \n\n    useEffect(() => {\n        onRequest(offset, true);\n    }, [])\n\n    \n    const onRequest = (offset, initial) => {\n        initial ? setNewItemLoading(false) : setNewItemLoading(true)\n        getAllCharacters(offset)\n            .then(onCharListLoaded);\n    }\n\n   const onCharListLoaded = (newCharList) => {\n        let ended = false;\n        if ( newCharList.length < 9) {\n            ended = true;\n        }\n\n        setCharList(charList => [...charList, ...newCharList]);\n        setNewItemLoading(setNewItemLoading => false);\n        setOffset(setOffset => offset + 9);\n        setCharEnded(setCharEnded => ended);\n    }\n\n   const itemRefs = useRef([]);\n    \n  const focusOnItem = (id) => {\n        itemRefs.current.forEach(ref => ref.classList.remove('char__item_selected'))\n        itemRefs.current[id].classList.add('char__item_selected');\n        itemRefs.current[id].focus();\n    }\n\n   function renderItems(id){\n        const items = id.map((item,i) => {\n            let imgStyle = {'objectFit' : 'cover'};\n            if (item.thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n                imgStyle = {'objectFit' : 'unset'};\n            }\n            return (\n                <li \n                    className=\"char__item\"\n                    key={item.id}\n                    ref={el => itemRefs.current[i] = el}\n                    onClick={() => {\n                        props.onCharSelected(item.id); \n                        focusOnItem(i) \n                    }}\n                    onKeyPres ={(e) => {\n                        if (e.key === ' ' || e.key === 'Enter') {\n                            props.onCharSelected(item.id);\n                            focusOnItem(i)\n                        }\n                    }}\n                    >\n                        <img src={item.thumbnail} alt={item.name} style={imgStyle}/>\n                        <div className=\"char__name\">{item.name}</div>\n                </li>\n            )\n        });\n        return (\n            <ul className=\"char__grid\">\n                {items}\n            </ul>\n        ) \n    }\n\n\n        const items = renderItems(charList);\n\n        const errorMessage = error ? <ErrorMessage/> : null;\n        const spinner = loading && !newItemLoading ? <Spinner/> : null;\n        \n        return (\n            <div className=\"char__list\">\n                {errorMessage}\n                {spinner}\n                {items}\n                <button \n                    className=\"button button__main button__long\"\n                    disabled={newItemLoading}\n                    style={{'display': charEnded ? 'none' : 'block'}}\n                    onClick={() => onRequest(offset)}>\n                    <div className=\"inner\">load more</div>\n                </button>\n            </div>\n        )\n}\n\nCharList.propTypes = {\n    onCharSelected: PropTypes.func.isRequired\n}\n\nexport default CharList;","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import { useEffect, useState} from 'react';\nimport PropTypes from 'prop-types';\n\nimport Spinner from '../spinner/Spinner'\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport Skeleton from '../skeleton/Skeleton'\n\nimport './charInfo.scss';\nimport useMarvelService from '../../services/MarvelService'\n\nconst CharInfo = (props) =>{\n            const [char, setChar] = useState(null);\n        \n        const {loading, error, getCharacter, clearError} = useMarvelService(); \n\n           useEffect(() => {\n            updateChar();\n           }, [props.charId])\n\n        const updateChar = () => {\n                const {charId} = props;\n                if(!charId){\n                    return;\n                }\n                clearError();\n\n                    getCharacter(charId)\n                    .then(onCharLoaded)\n           }\n\n       const onCharLoaded = (char) => {\n            setChar(char);\n        }\n\n            const skeleton = char || loading || error ? null : <Skeleton/>\n            const errorMessage = error ? <ErrorMessage/> : null;\n            const spinner = loading ? <Spinner/> : null;\n            const content = !(loading || error || !char) ? <View char={char}/> : null;\n\n            return (\n                <div className=\"char__info\">\n                    {skeleton}\n                    {errorMessage}\n                    {spinner}\n                    {content}\n                </div>\n            )\n\n}\n\nconst View = ({char}) => {\n    const {name, description, thumbnail, homepage, wiki, comics} = char;\n\n    let imgStyle = {'objectFit' : 'cover'};\n    if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n        imgStyle = {'objectFit' : 'unset'};\n    }\n    return (\n        <>\n         <div className=\"char__basics\">\n                        <img style={imgStyle} src={thumbnail} alt={name}/>\n                        <div>\n                            <div className=\"char__info-name\">{name}</div>\n                            <div className=\"char__btns\">\n                                <a href={homepage} className=\"button button__main\">\n                                    <div className=\"inner\">homepage</div>\n                                </a>\n                                <a href={wiki} className=\"button button__secondary\">\n                                    <div className=\"inner\">Wiki</div>\n                                </a>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"char__descr\">\n                        {description}\n                    </div>\n                    <div className=\"char__comics\">Comics:</div>\n                    <ul className=\"char__comics-list\">\n                        {comics.length > 0  ? null : 'There is no comics with this character'}\n                        {\n                            comics.map((item, i) => {\n                                // eslint-disable-next-line\n                                if(i > 9) return;\n                                    return (\n                                        <>\n                                        \n                                        <li key={i} className=\"char__comics-item\">\n                                        {item.name}\n                                        </li>\n                                        \n                                        </>\n                                    )\n                            \n                            })\n                        }\n                    </ul>\n        </>\n    )\n}\n\nCharInfo.propTypes = {\n    charId: PropTypes.string,\n}\n\nexport default CharInfo;","import { Component} from 'react';\r\nimport ErrorMessage from '../errorMessage/ErrorMessage';\r\n\r\nclass ErrorBoundary extends Component {\r\n    state = {\r\n        error: false\r\n    }\r\n\r\n    // static getDerivedStateFromError(error) {\r\n    //     return { error: true }\r\n    // }\r\n\r\n    // getDerivedStateFromError - відновлює стан\r\n\r\n    componentDidCatch(err, errorInfo) {\r\n        console.log(err,errorInfo);\r\n        this.setState({\r\n            error: true\r\n        })\r\n    }\r\n\r\n    render() {\r\n        if(this.state.error) {\r\n            return  <ErrorMessage/>\r\n        }\r\n\r\n        return this.props.children;\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary;","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import { useState } from 'react';\r\n\r\nimport RandomChar from \"../randomChar/RandomChar\";\r\nimport CharList from \"../charList/CharList\";\r\nimport CharInfo from \"../charInfo/CharInfo\";\r\nimport ErrorBoundary from \"../errorBoundary/ErrorBoundary\";\r\n\r\nimport decoration from '../../resources/img/vision.png';\r\n\r\nconst MainPage = () => {\r\n\r\n    const [selectedChar, setChar] = useState(null);\r\n\r\n    const onCharSelected = (id) => {\r\n         setChar(id)\r\n     } \r\n\r\n    return (\r\n        <>\r\n    <ErrorBoundary>\r\n        <RandomChar/>\r\n    </ErrorBoundary>\r\n    <div className=\"char__content\">\r\n        \r\n        <ErrorBoundary>\r\n            <CharList onCharSelected={onCharSelected}/>\r\n        </ErrorBoundary>\r\n        \r\n        <ErrorBoundary>\r\n            <CharInfo charId={selectedChar}/>\r\n        </ErrorBoundary>\r\n    </div>\r\n    <img className=\"bg-decoration\" src={decoration} alt=\"vision\"/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MainPage;","import { useState, useEffect, useRef } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './comicsList.scss';\n\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport Spinner from '../spinner/Spinner';\nimport useMarvelService from '../../services/MarvelService';\n\nconst ComicsList = (props) => {\n    const [comicsList, setComicsList] = useState([]);\n    const [newItemLoading, setNewItemLoading] = useState(false);\n    const [offset, setOffset] = useState(210);\n    const [comicsEnded, setComicsEnded] = useState(false);\n\n    const {loading, error, getAllComics} = useMarvelService(); \n\n    useEffect(() => {\n        onRequest(offset, true);\n    }, [])\n\n    \n    const onRequest = (offset, initial) => {\n        initial ? setNewItemLoading(false) : setNewItemLoading(true)\n        getAllComics(offset)\n            .then(onComicsListLoaded);\n    }\n\n    const onComicsListLoaded = (newComicsList) => {\n        let ended = false;\n        if ( newComicsList.length < 9) {\n            ended = true;\n        }\n\n        setComicsList(comicsList => [...comicsList, ...newComicsList]);\n        setNewItemLoading(setNewItemLoading => false);\n        setOffset(setOffset => offset + 9);\n        setComicsEnded(setCharEnded => ended);\n    }\n\n    const ScrollUpButton = () => {\n        const [isVisible, setIsVisible] = useState(false);\n      \n        useEffect(() => {\n          window.addEventListener('scroll', handleScroll);\n          return () => {\n            window.removeEventListener('scroll', handleScroll);\n          };\n        }, []);\n      \n        const handleScroll = () => {\n          if (window.pageYOffset > 100) {\n            setIsVisible(true);\n          } else {\n            setIsVisible(false);\n          }\n        };\n      \n        const scrollToTop = () => {\n          window.scrollTo({\n            top: 0,\n            behavior: 'smooth',\n          });\n        };\n      \n        return (\n          <button\n            className={`scroll-up-button button-up ${{'display' : comicsEnded ? 'block' : 'none'}}`}\n            onClick={scrollToTop}>\n          </button>\n        );\n      };\n\n    function renderItems(id){\n        const comics = id.map((item,i) => {\n            let imgStyle = {'objectFit' : 'cover'};\n            if (item.thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n                imgStyle = {'objectFit' : 'unset'};\n            }\n\n            return (\n                <li className=\"comics__item\" key={i}>\n                    <Link to={`/comics/${item.id}`}>\n                        <img src={item.thumbnail} alt=\"ultimate war\" style={imgStyle} className=\"comics__item-img\"/>\n                        <div className=\"comics__item-name\">{item.title}</div>\n                        <div className=\"comics__item-price\">{item.price}</div>\n                    </Link>\n                </li>\n            )\n        })\n        return (\n            <ul className='comics__grid'>\n                {comics}\n            </ul>\n        )\n    }\nconst btn = <button   \n            disabled={newItemLoading} \n            style={{'display' : comicsEnded ? 'block' : 'none'}}\n            className=\"button button__main button__long\"\n            onClick={() => onRequest(offset)}>\n            <div className=\"inner\">load more</div>\n            </button>\n\n    const items = renderItems(comicsList);\n\n    const errorMessage = error ? <ErrorMessage/> : null;\n    const spinner = loading && !newItemLoading ? <Spinner/> : null;\n    const addNewItems = newItemLoading ? <Spinner/> : btn;\n    const scrollUpBtn = loading ? null : <ScrollUpButton/>;\n\n    return (\n        <div className=\"comics__list\">\n                {errorMessage}\n                {spinner}\n                {items}\n                {addNewItems}   \n                {scrollUpBtn}\n        </div>\n    )\n}\nexport default ComicsList;","export default __webpack_public_path__ + \"static/media/Avengers.4065c8f9.png\";","export default __webpack_public_path__ + \"static/media/Avengers_logo.9eaf2193.png\";","import './appBanner.scss';\nimport avengers from '../../resources/img/Avengers.png';\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\n\nconst AppBanner = () => {\n    return (\n        <div className=\"app__banner\">\n            <img src={avengers} alt=\"Avengers\"/>\n            <div className=\"app__banner-text\">\n                New comics every week!<br/>\n                Stay tuned!\n            </div>\n            <img src={avengersLogo} alt=\"Avengers logo\"/>\n        </div>\n    )\n}\n\nexport default AppBanner;","import ComicsList from '../comicsList/ComicsList';\r\nimport AppBanner from '../appBanner/AppBanner';\r\n\r\n\r\nconst ComicsPage = () => {\r\n    return (\r\n        <>\r\n             <AppBanner/>\r\n             <ComicsList/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ComicsPage","export default __webpack_public_path__ + \"static/media/Page404.e8774fe4.gif\";","import ErrorMessage from '../errorMessage/Page404.gif'\r\nimport {Link} from 'react-router-dom';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst Page404 = () => {\r\n    const navigate = useNavigate();\r\n\r\n    const handleBackButtonClick = () => {\r\n        navigate(-1); // navigate back to the previous page\r\n      }\r\n\r\n    return (\r\n        <div>\r\n            <p style={{'textAlign' : 'center', 'fontSize' : '25px'}}>Page not found</p>\r\n            <img src={ErrorMessage} style={{'margin' : '0 auto'}} alt=\"404\" />\r\n            <Link style={{ 'display' : 'block','textAlign' : 'center', 'fontSize' : '25px', 'marginTop' : '30px'}} to='/' onClick={handleBackButtonClick}>Back</Link>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Page404;","import { useParams, Link } from 'react-router-dom';\r\nimport { useState, useEffect } from 'react';\r\n\r\nimport useMarvelService from '../../services/MarvelService';\r\nimport Spinner from '../spinner/Spinner';\r\nimport ErrorMessage from '../errorMessage/ErrorMessage';\r\nimport AppBanner from \"../appBanner/AppBanner\";\r\nimport './singleComicPage.scss';\r\n\r\nconst SingleComicPage = () => {\r\n    const {comicId} = useParams();\r\n    const [comic, setComic] = useState(null);\r\n    const {loading, error, getComic, clearError} = useMarvelService();\r\n\r\n    useEffect(() => {\r\n        updateComic()\r\n    }, [comicId])\r\n\r\n    const updateComic = () => {\r\n        clearError();\r\n        getComic(comicId)\r\n            .then(onComicLoaded)\r\n    }\r\n\r\n    const onComicLoaded = (comic) => {\r\n        setComic(comic);\r\n    }\r\n\r\n    const errorMessage = error ? <ErrorMessage/> : null;\r\n    const spinner = loading ? <Spinner/> : null;\r\n    const content = !(loading || error || !comic) ? <View comic={comic}/> : null;\r\n\r\n    return (\r\n        <>\r\n            <AppBanner/>\r\n            {errorMessage}\r\n            {spinner}\r\n            {content}\r\n        </>\r\n    )\r\n}\r\n\r\nconst View = ({comic}) => {\r\n    const {title, description, pageCount, thumbnail, language, price} = comic;\r\n\r\n    return (\r\n        <div className=\"single-comic\">\r\n            <img src={thumbnail} alt={title} className=\"single-comic__img\"/>\r\n            <div className=\"single-comic__info\">\r\n                <h2 className=\"single-comic__name\">{title}</h2>\r\n                <p className=\"single-comic__descr\">{description}</p>\r\n                <p className=\"single-comic__descr\">{pageCount}</p>\r\n                <p className=\"single-comic__descr\">Language: {language}</p>\r\n                <div className=\"single-comic__price\">{price}</div>\r\n            </div>\r\n            <Link to=\"/comics\" className=\"single-comic__back\">Back to all</Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SingleComicPage;","import { Link, NavLink, useLocation } from 'react-router-dom';\nimport './appHeader.scss';\n\nconst AppHeader = () => {\n    const location = useLocation();\n\n    const isComicsPage = location.pathname.startsWith('/comics');\n\n    return (\n        <header className=\"app__header\">\n            <h1 className=\"app__title\">\n                <Link to=\"/\">\n                    <span>Marvel</span> information portal\n                </Link>\n            </h1>\n            <nav className=\"app__menu\">\n                <ul>\n                    <li>\n                        <NavLink \n                            end\n                            to=\"/\"\n                            style={({ isActive }) => ({ color: isActive ? '#9f0013' : 'black' })}\n                        >\n                            Characters\n                        </NavLink>\n                    </li>\n                    /\n                    <li>\n                        <NavLink \n                            end\n                            to=\"/comics\"\n                            style={({ isActive }) => ({ color: (isActive || isComicsPage) ? '#9f0013' : 'black' })}\n                        >\n                            Comics\n                        </NavLink>\n                    </li>\n                </ul>\n            </nav>\n        </header>\n    )\n}\n\nexport default AppHeader;\n","import { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\n\nimport {MainPage, ComicsPage, Page404, SingleComicPage} from '../pages'\nimport AppHeader from \"../appHeader/AppHeader\";\n\n\nconst App = () => {\nconst bob=0;\n        return (\n            <Router basename={process.env.PUBLIC_URL}>\n                <div className=\"app\">\n                    <AppHeader/>\n                    <main>\n                        <Routes>\n                            <Route path=\"/\" element={<MainPage/>}/>\n                            <Route path=\"/comics\" element={<ComicsPage/>}/>\n                            <Route path='*' element={<Page404/>}/> \n                            <Route path='/comics/:comicId' element={<SingleComicPage/>}/> \n                        </Routes>\n                    </main>\n                </div>\n            </Router>\n        )\n    }\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app/App';\nimport './style/style.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}