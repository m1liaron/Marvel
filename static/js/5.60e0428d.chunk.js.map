{"version":3,"sources":["components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","services/MarvelService.js","hooks/http.hook.js","resources/img/Avengers.png","resources/img/Avengers_logo.png","components/appBanner/AppBanner.js","components/comicsList/ComicsList.js","components/pages/ComicsPage.js"],"names":["ErrorMessage","_jsx","style","direction","width","height","objectFit","margin","src","img","alt","useMarvelService","_useHttp","_useState","useState","_useState2","_slicedToArray","loading","setLoading","_useState3","_useState4","error","setError","request","useCallback","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","url","method","body","headers","response","data","_args","arguments","wrap","_context","prev","next","length","undefined","fetch","sent","ok","Error","concat","status","json","abrupt","t0","message","stop","_x","apply","clearError","useHttp","_apiBase","_apiKey","getAllCharacters","offset","res","results","map","_transformCharacter","getCharacterByName","_ref2","_callee2","name","_context2","getCharacter","_ref3","_callee3","id","_context3","_x2","getAllComics","_ref4","_callee4","_args4","_context4","_transformComics","getComic","_ref5","_callee5","_context5","_x3","char","trueCharDescription","description","split","splice","join","thumbnail","path","extension","homepage","urls","wiki","comics","items","_comics$textObjects$","title","pageCount","language","textObjects","price","prices","AppBanner","_jsxs","className","children","avengers","avengersLogo","ComicsList","props","comicsList","setComicsList","newItemLoading","setNewItemLoading","_useState5","_useState6","setOffset","_useState7","_useState8","comicsEnded","setComicsEnded","_useMarvelService","useEffect","onRequest","initial","then","onComicsListLoaded","newComicsList","ended","_toConsumableArray","setCharEnded","ScrollUpButton","_useState9","_useState10","setIsVisible","window","addEventListener","handleScroll","removeEventListener","pageYOffset","onClick","scrollTo","top","behavior","btn","disabled","item","i","imgStyle","Link","to","renderItems","errorMessage","spinner","Spinner","addNewItems","scrollUpBtn","ComicsPage","_Fragment"],"mappings":"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","file":"static/js/5.60e0428d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/error.7725c6cd.gif\";","import img from './error.gif';\n\nconst ErrorMessage = () => {\n    return (\n        // <img src={process.env.PUBLIC_URL + '/error.gif'}/>\n        <img style={{direction:'block', width:'250px', \n        height:'250px',objectFit:'contain', margin:'0 auto'}} \n        src={img} alt=\"Error\"/>\n    )\n}\n\nexport default ErrorMessage;","import { useHttp } from \"../hooks/http.hook\";\n\n\nconst useMarvelService = () => {\n    const {loading, request, error, clearError} = useHttp();\n    \n    const _apiBase = 'https://gateway.marvel.com:443/v1/public/';\n    const _apiKey = '&apikey=ec3605c1d50d12ae1995f95b3750ae07';\n    const _baseOffset = 210;\n    // __Name - це прогромисти договорюються не змінювати тут нічого\n\n \n    const getAllCharacters = async (offset = _baseOffset) => {\n\t\tconst res = await request(\n\t\t\t`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`\n\t\t);\n\t\treturn res.data.results.map(_transformCharacter);\n\t};\n\n\n//    const getAllCharacters =  async(offset = _baseOffset) => {\n//         const res = await request(`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`);\n//         return res.data.results.map(_transformCharacter);\n//     }\n    \n    const getCharacterByName = async (name) => {\n\t\tconst res = await request(`${_apiBase}characters?name=${name}&${_apiKey}`);\n\t\treturn res.data.results.map(_transformCharacter);\n\t};\n\n\n   const getCharacter = async (id) => {\n        const res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\n        return _transformCharacter(res.data.results[0]);\n    }\n\nconst getAllComics = async (offset = 0) => {\n\t\tconst res = await request(\n\t\t\t`${_apiBase}comics?orderBy=issueNumber&limit=8&offset=${offset}&${_apiKey}`\n\t\t);\n\t\treturn res.data.results.map(_transformComics);\n\t};\n\n\tconst getComic = async (id) => {\n\t\tconst res = await request(`${_apiBase}comics/${id}?${_apiKey}`);\n\t\treturn _transformComics(res.data.results[0]);\n\t};\n\n\n\n   const _transformCharacter = (char) => {\n        const trueCharDescription = char.description ? (char.description.length > 150 ? char.description.split('').splice(0, 100).join('') + \"...\" : char.description) : \"We don't have information about this character\";\n        return {\n            id:char.id,\n            name: char.name,\n            description: trueCharDescription,\n            thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension ,\n            homepage: char.urls[0].url,\n            wiki: char.urls[1].url,\n            comics: char.comics.items \n        }\n    }\n\n    const _transformComics = (comics) => {\n        return {\n            id:comics.id,\n            title: comics.title,\n            description: comics.description || \"There is no description\",\n            pageCount: comics.pageCount \n                    ? `${comics.pageCount} p.` \n                    : 'No information about the number of pages',\n            thumbnail: comics.thumbnail.path + '.' + comics.thumbnail.extension,\n            language: comics.textObjects[0]?.language || 'en-us',\n            price: comics.prices[0].price \n                    ? `${comics.prices[0].price}$` \n                    : 'not available',\n        };\n    }\n\n    return {\n        loading,\n\t\terror,\n\t\tclearError,\n\t\tgetAllCharacters,\n\t\tgetCharacterByName,\n\t\tgetCharacter,\n\t\tgetAllComics,\n\t\tgetComic,\n        }\n} \n\nexport default useMarvelService;","import { useState,  useCallback } from 'react';\n\nexport const useHttp = () => {\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(null);\n\n   const request = useCallback(async (url, method = 'GET', body = null, headers = {'Content-Type': 'application/json'}) => {\n    \n        setLoading(true);\n        \n        try {\n            const response = await fetch(url, {method,body,headers});\n            \n            if(!response.ok){\n                throw new Error(`Could not fetch ${url}, status ${response.status}`);\n            }\n\n            const data = await response.json();\n\n            setLoading(false);\n            return data; \n        } catch(error) {\n            setError(error.message);\n            setLoading(false);\n            throw error;\n        }\n\n   }, []) \n\n   const clearError = useCallback(() => setError(null), []);\n\n   return {loading, request, error, clearError}\n}","export default __webpack_public_path__ + \"static/media/Avengers.4065c8f9.png\";","export default __webpack_public_path__ + \"static/media/Avengers_logo.9eaf2193.png\";","import './appBanner.scss';\nimport avengers from '../../resources/img/Avengers.png';\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\n\nconst AppBanner = () => {\n    return (\n        <div className=\"app__banner\">\n            <img src={avengers} alt=\"Avengers\"/>\n            <div className=\"app__banner-text\">\n                New comics every week!<br/>\n                Stay tuned!\n            </div>\n            <img src={avengersLogo} alt=\"Avengers logo\"/>\n        </div>\n    )\n}\n\nexport default AppBanner;","import { useState, useEffect, useRef } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './comicsList.scss';\n\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport Spinner from '../spinner/Spinner';\nimport useMarvelService from '../../services/MarvelService';\n\nconst ComicsList = (props) => {\n    const [comicsList, setComicsList] = useState([]);\n    const [newItemLoading, setNewItemLoading] = useState(false);\n    const [offset, setOffset] = useState(210);\n    const [comicsEnded, setComicsEnded] = useState(false);\n\n    const {loading, error, getAllComics} = useMarvelService(); \n\n    useEffect(() => {\n        onRequest(offset, true);\n    }, [])\n\n    \n    const onRequest = (offset, initial) => {\n        initial ? setNewItemLoading(false) : setNewItemLoading(true)\n        getAllComics(offset)\n            .then(onComicsListLoaded);\n    }\n\n    const onComicsListLoaded = (newComicsList) => {\n        let ended = false;\n        if ( newComicsList.length < 9) {\n            ended = true;\n        }\n\n        setComicsList(comicsList => [...comicsList, ...newComicsList]);\n        setNewItemLoading(setNewItemLoading => false);\n        setOffset(setOffset => offset + 9);\n        setComicsEnded(setCharEnded => ended);\n    }\n\n    const ScrollUpButton = () => {\n        const [isVisible, setIsVisible] = useState(false);\n      \n        useEffect(() => {\n          window.addEventListener('scroll', handleScroll);\n          return () => {\n            window.removeEventListener('scroll', handleScroll);\n          };\n        }, []);\n      \n        const handleScroll = () => {\n          if (window.pageYOffset > 100) {\n            setIsVisible(true);\n          } else {\n            setIsVisible(false);\n          }\n        };\n      \n        const scrollToTop = () => {\n          window.scrollTo({\n            top: 0,\n            behavior: 'smooth',\n          });\n        };\n      \n        return (\n          <button\n            className={`scroll-up-button button-up ${{'display' : comicsEnded ? 'block' : 'none'}}`}\n            onClick={scrollToTop}>\n          </button>\n        );\n      };\n\n    function renderItems(id){\n        const comics = id.map((item,i) => {\n            let imgStyle = {'objectFit' : 'cover'};\n            if (item.thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n                imgStyle = {'objectFit' : 'unset'};\n            }\n\n            return (\n                <li className=\"comics__item\" key={i}>\n                    <Link to={`/comics/${item.id}`}>\n                        <img src={item.thumbnail} alt=\"ultimate war\" style={imgStyle} className=\"comics__item-img\"/>\n                        <div className=\"comics__item-name\">{item.title}</div>\n                        <div className=\"comics__item-price\">{item.price}</div>\n                    </Link>\n                </li>\n            )\n        })\n        return (\n            <ul className='comics__grid'>\n                {comics}\n            </ul>\n        )\n    }\nconst btn = <button   \n            disabled={newItemLoading} \n            style={{'display' : comicsEnded ? 'block' : 'none'}}\n            className=\"button button__main button__long\"\n            onClick={() => onRequest(offset)}>\n            <div className=\"inner\">load more</div>\n            </button>\n\n    const items = renderItems(comicsList);\n\n    const errorMessage = error ? <ErrorMessage/> : null;\n    const spinner = loading && !newItemLoading ? <Spinner/> : null;\n    const addNewItems = newItemLoading ? <Spinner/> : btn;\n    const scrollUpBtn = loading ? null : <ScrollUpButton/>;\n\n    return (\n        <div className=\"comics__list\">\n                {errorMessage}\n                {spinner}\n                {items}\n                {addNewItems}   \n                {scrollUpBtn}\n        </div>\n    )\n}\nexport default ComicsList;","import ComicsList from '../comicsList/ComicsList';\nimport AppBanner from '../appBanner/AppBanner';\n\n\nconst ComicsPage = () => {\n    return (\n        <>\n             <AppBanner/>\n             <ComicsList/>\n        </>\n    )\n}\n\nexport default ComicsPage"],"sourceRoot":""}