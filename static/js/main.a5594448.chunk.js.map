{"version":3,"sources":["components/appHeader/AppHeader.js","components/spinner/Spinner.js","components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","services/MarvelService.js","resources/img/mjolnir.png","components/randomChar/RandomChar.js","components/charList/CharList.js","components/skeleton/Skeleton.js","components/charInfo/CharInfo.js","components/errorBoundary/ErrorBoundary.js","resources/img/vision.png","components/app/App.js","index.js"],"names":["AppHeader","_jsxs","className","children","_jsx","href","Spinner","Ring","size","lineWeight","speed","color","ErrorMessage","style","direction","width","height","objectFit","margin","src","img","alt","MarvelService","_this","_classCallCheck","_apiBase","_apiKey","_baseOffset","getResources","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","url","res","wrap","_context","prev","next","fetch","sent","ok","Error","concat","status","json","abrupt","stop","_x","apply","arguments","getAllCharacters","_callee2","offset","_args2","_context2","length","undefined","data","results","map","_transformCharacter","getCharacter","_ref3","_callee3","id","_context3","_x2","char","trueCharDescription","description","split","splice","join","name","thumbnail","path","extension","homepage","urls","wiki","comics","items","RandomChar","_Component","_inherits","_super","_createSuper","_len","args","Array","_key","call","state","loading","error","onCharLoaded","setState","onCharLoading","onError","updateChar","Math","floor","random","then","catch","_createClass","key","value","this","clearInterval","timerId","_this$state","errorMessage","spinner","content","View","onClick","mjolnir","Component","imgStyle","CharList","charList","newItemLoading","charEnded","onRequest","onCharListLoading","onCharListLoaded","newCharList","ended","_toConsumableArray","itemRefs","setRef","elem","push","focusOnItem","forEach","ref","classList","remove","add","focus","renderItems","item","i","props","onCharSelected","onKeyPres","e","_this2","disabled","Skeleton","_Fragment","CharInfo","charId","prevProps","prevState","skeleton","ErrorBoundary","err","errorInfo","console","log","App","selectedChar","decoration","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a5594448.chunk.js","sourcesContent":["import './appHeader.scss';\n\nconst AppHeader = () => {\n    return (\n        <header className=\"app__header\">\n            <h1 className=\"app__title\">\n                <a href=\"#\">\n                    <span>Marvel</span> information portal\n                </a>\n            </h1>\n            <nav className=\"app__menu\">\n                <ul>\n                    <li><a href=\"#\">Characters</a></li>\n                    /\n                    <li><a href=\"#\">Comics</a></li>\n                </ul>\n            </nav>\n        </header>\n    )\n}\n\nexport default AppHeader;","import { Ring } from '@uiball/loaders'\r\nimport './Spinner.scss'\r\nconst Spinner = () => {\r\n    return (\r\n        <div className=\"spinner\">\r\n        <Ring \r\n        size={40}\r\n        lineWeight={5}\r\n        speed={2} \r\n        color=\"black\" \r\n        />\r\n        </div>\r\n        )\r\n}\r\n\r\nexport default Spinner;  ","export default __webpack_public_path__ + \"static/media/error.7725c6cd.gif\";","import img from './error.gif';\r\n\r\nconst ErrorMessage = () => {\r\n    return (\r\n        // <img src={process.env.PUBLIC_URL + '/error.gif'}/>\r\n        <img style={{direction:'block', width:'250px', \r\n        height:'250px',objectFit:'contain', margin:'0 auto'}} \r\n        src={img} alt=\"Error\"/>\r\n    )\r\n}\r\n\r\nexport default ErrorMessage;","class MarvelService {\r\n    _apiBase = 'https://gateway.marvel.com:443/v1/public/';\r\n    _apiKey = '&apikey=ec3605c1d50d12ae1995f95b3750ae07';\r\n    _baseOffset = 210;\r\n    // __Name - це прогромисти договорюються не змінювати тут нічого\r\n\r\n    getResources = async (url) => {\r\n        let res = await fetch(url);\r\n        \r\n        if(!res.ok){\r\n            throw new Error(`Could not fetch ${url}, status ${res.status}`);\r\n        }\r\n\r\n        return await res.json();\r\n    }\r\n\r\n    getAllCharacters =  async(offset = this._baseOffset) => {\r\n        const res = await this.getResources(`${this._apiBase}characters?limit=9&offset=${offset}&${this._apiKey}`);\r\n        return res.data.results.map(this._transformCharacter);\r\n    }\r\n    getCharacter = async (id) => {\r\n        const res = await this.getResources(`${this._apiBase}characters/${id}?${this._apiKey}`);\r\n        return this._transformCharacter(res.data.results[0]);\r\n    }\r\n\r\n\r\n    _transformCharacter = (char) => {\r\n        const trueCharDescription = char.description ? (char.description.length > 150 ? char.description.split('').splice(0, 100).join('') + \"...\" : char.description) : \"We don't have information about this character\";\r\n        return {\r\n            id:char.id,\r\n            name: char.name,\r\n            description: trueCharDescription,\r\n            thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension ,\r\n            homepage: char.urls[0].url,\r\n            wiki: char.urls[1].url,\r\n            comics: char.comics.items \r\n\r\n        }\r\n    }\r\n}\r\n\r\nexport default MarvelService;\r\n\r\n\r\n// 1 do btn try it\r\n// 2 change in img cover in containt\r\n// 3 list character","export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","import { Component} from 'react';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport MarvelService from '../../services/MarvelService'\n\nimport './randomChar.scss';\nimport mjolnir from '../../resources/img/mjolnir.png';\n\nclass RandomChar extends Component {\n    \n    state = {\n        char: {},\n        loading: true,\n        error:false\n    }\n\n   MarvelService = new MarvelService(); \n\n    componentDidMount(){\n        this.updateChar();\n        // this.timerId = setInterval(this.updateChar, 3000);\n    }\n\n    componentWillUnmount(){\n        clearInterval(this.timerId);\n    }\n   \n    onCharLoaded = (char) => {\n        this.setState({\n            char, \n            loading:false\n        });\n    }\n\n    onCharLoading = () => {\n        this.setState({\n            loading: true\n        })\n    }\n\n    onError = () => {\n        this.setState({\n            loading:false,\n            error:true\n        });\n    }\n\n    updateChar = () => {\n        const id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000);\n        this.onCharLoading();\n            this.MarvelService\n            .getCharacter(id)\n            .then(this.onCharLoaded)\n            .catch(this.onError);\n    }\n\n    render(){\n        const { char, loading, error} = this.state;\n        const errorMessage = error ? <ErrorMessage/> : null;\n        const spinner = loading ? <Spinner/> : null;\n        const content = !(loading || error) ? <View char={char}/> : null;\n\n\n        return (\n            <div className=\"randomchar\">\n                {errorMessage}\n                {spinner}\n                {content}\n                <div className=\"randomchar__static\">\n                    <p className=\"randomchar__title\">\n                        Random character for today!<br/>\n                        Do you want to get to know him better?\n                    </p>\n                    <p className=\"randomchar__title\">\n                        Or choose another one\n                    </p>\n                    <button onClick={this.updateChar} className=\"button button__main\">\n                        <div className=\"inner\">try it</div>\n                    </button>\n                    <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\"/>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst View = ({ char }) => {\n    const {name, description, thumbnail,homepage, wiki} = char;\n\n    let imgStyle = {'objectFit' : 'cover'};\n        if (char.thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n            imgStyle = {'objectFit' : 'unset'};\n        }\n\n    return (\n        <div className=\"randomchar__block\">\n        <img src={thumbnail} style={imgStyle} alt=\"Random character\" className=\"randomchar__img\"/>\n        <div className=\"randomchar__info\">\n            <p className=\"randomchar__name\">{name}</p>\n            <p className=\"randomchar__descr\">\n                {description}\n            </p>\n            <div className=\"randomchar__btns\">\n                <a href={homepage} className=\"button button__main\">\n                    <div className=\"inner\">homepage</div>\n                </a>\n                <a href={wiki} className=\"button button__secondary\">\n                    <div className=\"inner\">wiki</div>\n                </a>\n            </div>\n        </div>\n    </div>\n    )\n}\n\nexport default RandomChar;","import React,{ Component } from 'react';\n\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport Spinner from '../spinner/Spinner';\nimport MarvelService from '../../services/MarvelService';\nimport './charList.scss';\n\nclass CharList extends Component {\n\n    state = {\n        charList: [],\n        loading: true,\n        error: false,\n        newItemLoading: false,\n        offset: 1541,\n        charEnded: false\n    }\n\n    MarvelService = new MarvelService(); \n\n    componentDidMount(){\n            this.onRequest();\n    }\n\n    onRequest = (offset) => {\n        this.onCharListLoading();\n        this.MarvelService.getAllCharacters(offset)\n            .then(this.onCharListLoaded)\n            .catch(this.onError);\n    }\n\n    onCharListLoading = () => {\n        this.setState({\n            newItemLoading: true\n        })\n    }\n\n    onCharListLoaded = (newCharList) => {\n        let ended = false;\n        if ( newCharList.length < 9) {\n            ended = true;\n        }\n\n        this.setState(({offset, charList}) => ({\n            charList: [...charList, ...newCharList],\n            loading: false,\n            newItemLoading: false,\n            offset: offset + 9,\n            charEnded: ended\n        }))\n    }\n    \n    onError = () => {\n        this.setState({\n            loading:false,\n            error:true\n        });\n    }\n\n    itemRefs = [];\n\n    setRef = (elem) => {\n        this.itemRefs.push(elem);\n    }\n    \n    focusOnItem = (id) => {\n        this.itemRefs.forEach(ref => ref.classList.remove('char__item_selected'))\n        this.itemRefs[id].classList.add('char__item_selected')\n        this.itemRefs[id].focus();\n    }\n\n    renderItems = (id) => {\n        const items = id.map((item,i) => {\n            let imgStyle = {'objectFit' : 'cover'};\n            if (item.thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n                imgStyle = {'objectFit' : 'unset'};\n            }\n            return (\n                <li \n                    className=\"char__item\"\n                    key={item.id}\n                    ref={this.setRef}\n                    onClick={() => {\n                        this.props.onCharSelected(item.id); \n                        this.focusOnItem(i) \n                    }}\n                    onKeyPres ={(e) => {\n                        if (e.key === ' ' || e.key === 'Enter') {\n                            this.props.onCharSelected(item.id);\n                            this.focusOnItem(i)\n                        \n                        }\n                    }}\n                    >\n                        <img src={item.thumbnail} alt={item.name} style={imgStyle}/>\n                        <div className=\"char__name\">{item.name}</div>\n                </li>\n            )\n        });\n        return (\n            <ul className=\"char__grid\">\n                {items}\n            </ul>\n        ) \n    }\n\n    render(){\n        const { charList, loading, error, offset, newItemLoading, charEnded} = this.state;\n\n        const items = this.renderItems(charList);\n\n        const errorMessage = error ? <ErrorMessage/> : null;\n        const spinner = loading ? <Spinner/> : null;\n        const content = !(loading || error) ? items : null;\n        return (\n            <div className=\"char__list\">\n                {errorMessage}\n                {spinner}\n                {content}\n                <button \n                    className=\"button button__main button__long\"\n                    disabled={newItemLoading}\n                    style={{'display': charEnded ? 'none' : 'block'}}\n                    onClick={() => this.onRequest(offset)}>\n                    <div className=\"inner\">load more</div>\n                </button>\n            </div>\n        )\n    }\n}\n\n\nexport default CharList;","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import { Component} from 'react';\nimport PropTypes from 'prop-types';\n\nimport Spinner from '../spinner/Spinner'\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport Skeleton from '../skeleton/Skeleton'\n\nimport './charInfo.scss';\nimport MarvelService from '../../services/MarvelService'\n\nclass CharInfo extends Component{\n\n            state = {\n                char: null,\n                loading: false,\n                error:false\n            }\n        \n           MarvelService = new MarvelService(); \n\n           componentDidMount() {\n            this.updateChar();\n           }\n\n           componentDidUpdate(prevProps, prevState) {\n                if(this.props.charId !== prevProps.charId){\n                    this.updateChar();\n                }\n           }\n\n           updateChar = () => {\n                const {charId} = this.props;\n                if(!charId){\n                    return;\n                }\n\n                this.onCharLoading();\n\n                this.MarvelService\n                    .getCharacter(charId)\n                    .then(this.onCharLoaded)\n                    .catch(this.onError);\n\n                // this.foo.bar = 0;\n           }\n\n        onCharLoaded = (char) => {\n            this.setState({\n                char, \n                loading:false\n            });\n        }\n        \n    \n        onCharLoading = () => {\n            this.setState({\n                loading: true\n            })\n        }\n    \n        onError = () => {\n            this.setState({\n                loading:false,\n                error:true\n            });\n        }\n        render(){\n            const {char, loading, error} = this.state;\n\n            const skeleton = char || loading || error ? null : <Skeleton/>\n            const errorMessage = error ? <ErrorMessage/> : null;\n            const spinner = loading ? <Spinner/> : null;\n            const content = !(loading || error || !char) ? <View char={char}/> : null;\n\n            return (\n                <div className=\"char__info\">\n                    {skeleton}\n                    {errorMessage}\n                    {spinner}\n                    {content}\n                </div>\n            )\n        }\n}\n\nconst View = ({char}) => {\n    const {name, description, thumbnail, homepage, wiki, comics} = char;\n\n    let imgStyle = {'objectFit' : 'cover'};\n    if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n        imgStyle = {'objectFit' : 'unset'};\n    }\n    return (\n        <>\n         <div className=\"char__basics\">\n                        <img style={imgStyle} src={thumbnail} alt={name}/>\n                        <div>\n                            <div className=\"char__info-name\">{name}</div>\n                            <div className=\"char__btns\">\n                                <a href={homepage} className=\"button button__main\">\n                                    <div className=\"inner\">homepage</div>\n                                </a>\n                                <a href={wiki} className=\"button button__secondary\">\n                                    <div className=\"inner\">Wiki</div>\n                                </a>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"char__descr\">\n                        {description}\n                    </div>\n                    <div className=\"char__comics\">Comics:</div>\n                    <ul className=\"char__comics-list\">\n                        {comics.length > 0  ? null : 'There is no comics with this character'}\n                        {\n                            comics.map((item, i) => {\n                                // eslint-disable-next-line\n                                if(i > 9) return;\n                                    return (\n                                        <>\n                                        \n                                        <li key={i} className=\"char__comics-item\">\n                                        {item.name}\n                                        </li>\n                                        \n                                        </>\n                                    )\n                            \n                            })\n                        }\n                    </ul>\n        </>\n    )\n}\n\nCharInfo.propTypes = {\n    charId: PropTypes.string,\n}\n\nexport default CharInfo;","import { Component} from 'react';\r\nimport ErrorMessage from '../errorMessage/ErrorMessage';\r\n\r\nclass ErrorBoundary extends Component {\r\n    state = {\r\n        error: false\r\n    }\r\n\r\n    // static getDerivedStateFromError(error) {\r\n    //     return { error: true }\r\n    // }\r\n\r\n    // getDerivedStateFromError - відновлює стан\r\n\r\n    componentDidCatch(err, errorInfo) {\r\n        console.log(err,errorInfo);\r\n        this.setState({\r\n            error: true\r\n        })\r\n    }\r\n\r\n    render() {\r\n        if(this.state.error) {\r\n            return  <ErrorMessage/>\r\n        }\r\n\r\n        return this.props.children;\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary;","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import { Component} from 'react';\n\nimport AppHeader from \"../appHeader/AppHeader\";\nimport RandomChar from \"../randomChar/RandomChar\";\nimport CharList from \"../charList/CharList\";\nimport CharInfo from \"../charInfo/CharInfo\";\nimport ErrorBoundary from \"../errorBoundary/ErrorBoundary\";\n\nimport decoration from '../../resources/img/vision.png';\n\nclass App extends Component {\n    \n    state = {\n        selectedChar: null\n    }\n\n    onCharSelected = (id) => {\n        this.setState({\n            selectedChar: id\n        })\n    } \n\n    render(){\n        return (\n            <div className=\"app\">\n                <AppHeader/>\n                <main>\n                    <ErrorBoundary>\n                        <RandomChar/>\n                    </ErrorBoundary>\n                    \n                    <div className=\"char__content\">\n                        <ErrorBoundary>\n                            <CharList onCharSelected={this.onCharSelected}/>\n                        </ErrorBoundary>\n                        \n                        <ErrorBoundary>\n                            <CharInfo charId={this.state.selectedChar}/>\n                        </ErrorBoundary>\n                    </div>\n                    <img className=\"bg-decoration\" src={decoration} alt=\"vision\"/>\n                </main>\n            </div>\n        )\n    }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app/App';\nimport './style/style.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}